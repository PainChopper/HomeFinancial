// <auto-generated />
using System;
using HomeFinancial.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HomeFinancial.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HomeFinancial.Domain.Entities.Bank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(512)
                        .HasColumnType("character varying(512)")
                        .HasColumnName("address");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("bank_id");

                    b.Property<string>("Bic")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("bic");

                    b.Property<string>("Inn")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("inn");

                    b.Property<string>("Kpp")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("kpp");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)")
                        .HasColumnName("name");

                    b.Property<string>("RegistrationNumber")
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("registration_number");

                    b.Property<string>("Swift")
                        .HasMaxLength(16)
                        .HasColumnType("character varying(16)")
                        .HasColumnName("swift");

                    b.HasKey("Id")
                        .HasName("pk_banks");

                    b.HasIndex("BankId")
                        .IsUnique()
                        .HasDatabaseName("ix_banks_bank_id");

                    b.ToTable("banks", (string)null);
                });

            modelBuilder.Entity("HomeFinancial.Domain.Entities.BankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("account_id");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("account_type");

                    b.Property<int>("BankId")
                        .HasColumnType("integer")
                        .HasColumnName("bank_id");

                    b.HasKey("Id")
                        .HasName("pk_banks_accounts");

                    b.HasIndex("AccountId")
                        .HasDatabaseName("ix_banks_accounts_account_id");

                    b.HasIndex("BankId")
                        .HasDatabaseName("ix_banks_accounts_bank_id");

                    b.ToTable("banks_accounts", (string)null);
                });

            modelBuilder.Entity("HomeFinancial.Domain.Entities.BankFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("file_name");

                    b.Property<DateTime>("ImportedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("imported_at");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("pk_bank_files");

                    b.HasIndex("FileName")
                        .IsUnique()
                        .HasDatabaseName("ix_bank_files_file_name");

                    b.ToTable("bank_files", (string)null);
                });

            modelBuilder.Entity("HomeFinancial.Domain.Entities.EntryCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_entry_categories");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_entry_categories_name");

                    b.ToTable("entry_categories", (string)null);
                });

            modelBuilder.Entity("HomeFinancial.Domain.Entities.StatementEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric")
                        .HasColumnName("amount");

                    b.Property<int>("BankAccountId")
                        .HasColumnType("integer")
                        .HasColumnName("bank_account_id");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<int>("FileId")
                        .HasColumnType("integer")
                        .HasColumnName("file_id");

                    b.Property<string>("FitId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("fit_id");

                    b.HasKey("Id")
                        .HasName("pk_statement_entries");

                    b.HasIndex("BankAccountId")
                        .HasDatabaseName("ix_statement_entries_bank_account_id");

                    b.HasIndex("CategoryId")
                        .HasDatabaseName("ix_statement_entries_category_id");

                    b.HasIndex("FileId")
                        .HasDatabaseName("ix_statement_entries_file_id");

                    b.HasIndex("FitId")
                        .IsUnique()
                        .HasDatabaseName("ix_statement_entries_fit_id");

                    b.ToTable("statement_entries", (string)null);
                });

            modelBuilder.Entity("HomeFinancial.Domain.Entities.BankAccount", b =>
                {
                    b.HasOne("HomeFinancial.Domain.Entities.Bank", "Bank")
                        .WithMany()
                        .HasForeignKey("BankId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_banks_accounts_banks_bank_id");

                    b.Navigation("Bank");
                });

            modelBuilder.Entity("HomeFinancial.Domain.Entities.StatementEntry", b =>
                {
                    b.HasOne("HomeFinancial.Domain.Entities.BankAccount", "BankAccount")
                        .WithMany()
                        .HasForeignKey("BankAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_statement_entries_banks_accounts_bank_account_id");

                    b.HasOne("HomeFinancial.Domain.Entities.EntryCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_statement_entries_entry_categories_category_id");

                    b.HasOne("HomeFinancial.Domain.Entities.BankFile", "File")
                        .WithMany()
                        .HasForeignKey("FileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_statement_entries_bank_files_file_id");

                    b.Navigation("BankAccount");

                    b.Navigation("Category");

                    b.Navigation("File");
                });
#pragma warning restore 612, 618
        }
    }
}
